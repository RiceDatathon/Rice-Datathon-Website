{"version":3,"file":"static/webpack/static\\development\\pages\\faqs.js.a1eb928839b12c916fb5.hot-update.js","sources":["webpack:///./components/faqs/faqs.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Flex } from 'rebass';\r\nimport Title from '../title/title.js';\r\nimport './faqs.css';\r\nimport { faqs } from './faqs.json';\r\n\r\nclass QuestionAnswer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            extended: false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({ extended: !this.state.extended });\r\n    }\r\n\r\n    render() {\r\n        let height = this.state.extended ? (500) : (0);\r\n\r\n        const altTheme = {\r\n            backgroundColor: '#2B354C',\r\n            color: '#A7BBCE'\r\n        }\r\n        return (\r\n            <div className='dropdown-container' onClick={this.handleClick} style={this.state.extended ? (altTheme) : (undefined)}>\r\n                <div className='dropdown-question'>\r\n                    {this.props.question} {' '} <img src='https://icon.now.sh/arrow/2B354C' alt='' />\r\n                </div>\r\n                <div className='dropdown-answer' style={{ maxHeight: height }}>\r\n                    {this.props.answer}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FAQs = () => {\r\n\r\n    const columns = [\r\n    ]\r\n\r\n    for (let i = 0; i < faqs.length; i++) {\r\n        columns[i % 3].push(\r\n            <Box width={1} key={`${faqs[i].question.slice(0, 10)}`}>\r\n                <QuestionAnswer question={faqs[i].question} answer={faqs[i].answer} />\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='faqs-page'>\r\n            <Title title=\"FAQs\" width={[0.5, 0.15]} theme={false} />\r\n            <Flex className='questions' flexDirection='row' flexWrap='wrap' justifyContent='center'>\r\n                {\r\n                    columns.map(column => (\r\n                        <Box width={[1, 0.22]} className='question-column' key={`C+${columns.indexOf(column)}`}>\r\n                            <Flex flexDirection='column'>\r\n                                {column}\r\n                            </Flex>\r\n                        </Box>\r\n                    ))\r\n                }\r\n            </Flex>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQs;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9BA;AACA;AAgCA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AACA;AACA;;;;A","sourceRoot":""}