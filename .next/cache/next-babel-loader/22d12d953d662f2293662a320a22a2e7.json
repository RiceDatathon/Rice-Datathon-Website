{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/components/navbar/navbar.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Box, Image } from 'rebass';\nimport './navbar.css';\nvar links = [{\n  name: 'Home',\n  href: '/'\n}, {\n  name: 'About',\n  href: 'about'\n}, {\n  name: 'Schedule',\n  href: 'schedule'\n}, {\n  name: 'Tracks',\n  href: 'tracks'\n}, {\n  name: 'Prizes',\n  href: 'prizes'\n}, {\n  name: 'FAQs',\n  href: 'faqs'\n}];\n\nvar Navbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  var _super = _createSuper(Navbar);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      open: false\n    };\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        open: !this.state.open\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, __jsx(Box, {\n        width: [0.9, 0.3],\n        className: \"datathon-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, __jsx(Image, {\n        src: \"../../static/datathon-logo.png\",\n        alt: \"Rice Datathon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: this.state.open ? 'navbar-visible' : 'navbar-hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        className: this.state.open ? 'navbar-toggle-open' : 'navbar-toggle-closed',\n        onClick: this.toggleNavbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"+\"), links.map(function (_ref) {\n        var name = _ref.name,\n            to = _ref.to,\n            href = _ref.href;\n        return __jsx(\"div\", {\n          className: \"navbar-item\",\n          key: name,\n          onClick: _this2.toggleNavbar,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        }, __jsx(Link, {\n          href: href,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, name)));\n      })));\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/components/navbar/navbar.js"],"names":["React","Link","Box","Image","links","name","href","Navbar","props","state","open","toggleNavbar","bind","setState","map","to","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,QAA3B;AACA,OAAO,cAAP;AAEA,IAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADU,EAKV;AACID,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALU,EASV;AACID,EAAAA,IAAI,EAAE,UADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATU,EAaV;AACID,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAbU,EAiBV;AACID,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAjBU,EAqBV;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,IAAI,EAAE;AAFV,CArBU,CAAd;;IA2BMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AALe;AAMlB;;;;mCAEc;AACX,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,GAAD;AAAK,QAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,CAAZ;AAAwB,QAAA,SAAS,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,GAAG,EAAC,gCAAX;AAA4C,QAAA,GAAG,EAAC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAmB,gBAAnB,GAAwC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAmB,oBAAnB,GAA4C,sBAA3D;AAAoF,QAAA,OAAO,EAAE,KAAKC,YAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGQP,KAAK,CAACU,GAAN,CAAU;AAAA,YAAGT,IAAH,QAAGA,IAAH;AAAA,YAASU,EAAT,QAASA,EAAT;AAAA,YAAaT,IAAb,QAAaA,IAAb;AAAA,eACN;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAED,IAAlC;AAAwC,UAAA,OAAO,EAAE,MAAI,CAACM,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAEL,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAJ,CADJ,CADJ,CADM;AAAA,OAAV,CAHR,CAJJ,CADJ;AAoBH;;;;EAlCgBL,KAAK,CAACgB,S;;AAsC3B,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Box, Image } from 'rebass';\nimport './navbar.css';\n\nconst links = [\n    {\n        name: 'Home',\n        href: '/'\n    },\n    {\n        name: 'About',\n        href: 'about'\n    },\n    {\n        name: 'Schedule',\n        href: 'schedule'\n    },\n    {\n        name: 'Tracks',\n        href: 'tracks'\n    },\n    {\n        name: 'Prizes',\n        href: 'prizes'\n    },\n    {\n        name: 'FAQs',\n        href: 'faqs'\n    }\n]\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n    }\n\n    toggleNavbar() {\n        this.setState({ open: !this.state.open });\n    }\n\n    render() {\n        return (\n            <div>\n                <Box width={[0.9, 0.3]} className='datathon-logo'>\n                    <Image src='../../static/datathon-logo.png' alt='Rice Datathon' />\n                </Box>\n                <div className={this.state.open ? ('navbar-visible') : ('navbar-hidden')}>\n                    <h1 className={this.state.open ? ('navbar-toggle-open') : ('navbar-toggle-closed')} onClick={this.toggleNavbar}>+</h1>\n                    {\n                        links.map(({ name, to, href }) => (\n                            <div className='navbar-item' key={name} onClick={this.toggleNavbar}>\n                                <Link href={href}>\n                                    <p>{name}</p>\n                                </Link>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}