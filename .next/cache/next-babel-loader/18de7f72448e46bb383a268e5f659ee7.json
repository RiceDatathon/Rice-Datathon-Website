{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { Box, Image } from 'rebass';\nimport './navbar.css';\nvar links = [{\n  name: 'Home',\n  href: '/'\n}, {\n  name: 'About',\n  href: 'about'\n}, {\n  name: 'Schedule',\n  href: 'schedule'\n}, {\n  name: 'Tracks',\n  href: 'tracks'\n}, {\n  name: 'Prizes',\n  href: 'prizes'\n}, {\n  name: 'FAQs',\n  href: 'faqs'\n}];\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      open: false\n    };\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        open: !this.state.open\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", null, React.createElement(Box, {\n        width: [0.8, 0.3],\n        className: \"datathon-logo\"\n      }, React.createElement(Image, {\n        src: \"../../static/datathon-logo.png\",\n        alt: \"Rice Datathon\"\n      })), React.createElement(\"div\", {\n        className: this.state.open ? 'navbar-visible' : 'navbar-hidden'\n      }, React.createElement(\"h1\", {\n        className: this.state.open ? 'navbar-toggle-open' : 'navbar-toggle-closed',\n        onClick: this.toggleNavbar\n      }, \"+\"), links.map(function (_ref) {\n        var name = _ref.name,\n            to = _ref.to,\n            href = _ref.href;\n        return React.createElement(\"div\", {\n          className: \"navbar-item\",\n          key: name,\n          onClick: _this2.toggleNavbar\n        }, React.createElement(Link, {\n          href: href\n        }, React.createElement(\"p\", null, name)));\n      })));\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nexport default Navbar;","map":null,"metadata":{},"sourceType":"module"}