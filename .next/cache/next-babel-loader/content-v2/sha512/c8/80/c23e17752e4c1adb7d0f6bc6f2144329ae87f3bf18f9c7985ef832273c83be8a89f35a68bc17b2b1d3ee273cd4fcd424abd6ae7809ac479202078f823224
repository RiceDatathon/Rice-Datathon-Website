{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.createRouteLoader = createRouteLoader;\n\nvar _getAssetPathFromRoute = _interopRequireDefault(require(\"../shared/lib/router/utils/get-asset-path-from-route\"));\n\nvar _requestIdleCallback = require(\"./request-idle-callback\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nconst MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  let entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  let resolver;\n  const prom = new Promise(resolve => {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? generator().then(value => (resolver(value), value)) : prom;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise((res, rej) => {\n    if (document.querySelector(`link[rel=\"prefetch\"][href^=\"${href}\"]`)) {\n      return res();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = `prefetch`;\n    link.crossOrigin = process.env.__NEXT_CROSS_ORIGIN;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction appendScript(src, script) {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = () => reject(markAssetError(new Error(`Failed to load script: ${src}`))); // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n} // We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\n\n\nlet devBuildPromise; // Resolve a promise that times out after given amount of milliseconds.\n\nfunction resolvePromiseWithTimeout(p, ms, err) {\n  return new Promise((resolve, reject) => {\n    let cancelled = false;\n    p.then(r => {\n      // Resolved, cancel the timeout\n      cancelled = true;\n      resolve(r);\n    }).catch(reject); // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n\n    if (true) {\n      (devBuildPromise || Promise.resolve()).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => setTimeout(() => {\n          if (!cancelled) {\n            reject(err);\n          }\n        }, ms));\n      });\n    }\n\n    if (false) {\n      (0, _requestIdleCallback).requestIdleCallback(() => setTimeout(() => {\n        if (!cancelled) {\n          reject(err);\n        }\n      }, ms));\n    }\n  });\n}\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  const onBuildManifest = new Promise(resolve => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    return Promise.resolve({\n      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js'))],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(manifest => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n    }\n\n    const allFiles = manifest[route].map(entry => assetPrefix + '/_next/' + encodeURI(entry));\n    return {\n      scripts: allFiles.filter(v => v.endsWith('.js')),\n      css: allFiles.filter(v => v.endsWith('.css'))\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  const entrypoints = new Map();\n  const loadedScripts = new Map();\n  const styleSheets = new Map();\n  const routes = new Map();\n\n  function maybeExecuteScript(src) {\n    let prom = loadedScripts.get(src);\n\n    if (prom) {\n      return prom;\n    } // Skip executing script if it's already in the DOM:\n\n\n    if (document.querySelector(`script[src^=\"${src}\"]`)) {\n      return Promise.resolve();\n    }\n\n    loadedScripts.set(src, prom = appendScript(src));\n    return prom;\n  }\n\n  function fetchStyleSheet(href) {\n    let prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to load stylesheet: ${href}`);\n      }\n\n      return res.text().then(text => ({\n        href: href,\n        content: text\n      }));\n    }).catch(err => {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n\n    onEntrypoint(route, execute) {\n      Promise.resolve(execute).then(fn => fn()).then(exports => ({\n        component: exports && exports.default || exports,\n        exports: exports\n      }), err => ({\n        error: err\n      })).then(input => {\n        const old = entrypoints.get(route);\n        entrypoints.set(route, input);\n        if (old && 'resolve' in old) old.resolve(input);\n      });\n    },\n\n    loadRoute(route, prefetch) {\n      return withFuture(route, routes, () => {\n        const routeFilesPromise = getFilesForRoute(assetPrefix, route).then(({\n          scripts,\n          css\n        }) => {\n          return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n        }).then(res => {\n          return this.whenEntrypoint(route).then(entrypoint => ({\n            entrypoint,\n            styles: res[1]\n          }));\n        });\n\n        if (true) {\n          devBuildPromise = new Promise(resolve => {\n            if (routeFilesPromise) {\n              return routeFilesPromise.finally(() => {\n                resolve();\n              });\n            }\n          });\n        }\n\n        return resolvePromiseWithTimeout(routeFilesPromise, MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({\n          entrypoint,\n          styles\n        }) => {\n          const res = Object.assign({\n            styles: styles\n          }, entrypoint);\n          return 'error' in entrypoint ? entrypoint : res;\n        }).catch(err => {\n          if (prefetch) {\n            // we don't want to cache errors during prefetch\n            throw err;\n          }\n\n          return {\n            error: err\n          };\n        });\n      });\n    },\n\n    prefetch(route) {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(output => Promise.all(canPrefetch ? output.scripts.map(script => prefetchViaDom(script, 'script')) : [])).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}));\n      }).catch( // swallow prefetch errors\n      () => {});\n    }\n\n  };\n}","map":{"version":3,"sources":["../../client/route-loader.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentType } from 'react'\nimport { ClientBuildManifest } from '../build/webpack/plugins/build-manifest-plugin'\nimport getAssetPathFromRoute from '../shared/lib/router/utils/get-asset-path-from-route'\nimport { requestIdleCallback } from './request-idle-callback'\n\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800\n\ndeclare global {\n  interface Window {\n    __BUILD_MANIFEST?: ClientBuildManifest\n    __BUILD_MANIFEST_CB?: Function\n  }\n}\n\nexport interface LoadedEntrypointSuccess {\n  component: ComponentType\n  exports: any\n}\nexport interface LoadedEntrypointFailure {\n  error: unknown\n}\nexport type RouteEntrypoint = LoadedEntrypointSuccess | LoadedEntrypointFailure\n\nexport interface RouteStyleSheet {\n  href: string\n  content: string\n}\n\nexport interface LoadedRouteSuccess extends LoadedEntrypointSuccess {\n  styles: RouteStyleSheet[]\n}\nexport interface LoadedRouteFailure {\n  error: unknown\n}\nexport type RouteLoaderEntry = LoadedRouteSuccess | LoadedRouteFailure\n\nexport type Future<V> = {\n  resolve: (entrypoint: V) => void\n  future: Promise<V>\n}\nfunction withFuture<T>(\n  key: string,\n  map: Map<string, Future<T> | T>,\n  generator?: () => Promise<T>\n): Promise<T> {\n  let entry: Future<T> | T | undefined = map.get(key)\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future\n    }\n    return Promise.resolve(entry)\n  }\n  let resolver: (entrypoint: T) => void\n  const prom: Promise<T> = new Promise<T>((resolve) => {\n    resolver = resolve\n  })\n  map.set(key, (entry = { resolve: resolver!, future: prom }))\n  return generator\n    ? // eslint-disable-next-line no-sequences\n      generator().then((value) => (resolver(value), value))\n    : prom\n}\n\nexport interface RouteLoader {\n  whenEntrypoint(route: string): Promise<RouteEntrypoint>\n  onEntrypoint(route: string, execute: () => unknown): void\n  loadRoute(route: string, prefetch?: boolean): Promise<RouteLoaderEntry>\n  prefetch(route: string): Promise<void>\n}\n\nfunction hasPrefetch(link?: HTMLLinkElement): boolean {\n  try {\n    link = document.createElement('link')\n    return (\n      // detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      (!!window.MSInputMethodContext && !!(document as any).documentMode) ||\n      link.relList.supports('prefetch')\n    )\n  } catch {\n    return false\n  }\n}\n\nconst canPrefetch: boolean = hasPrefetch()\n\nfunction prefetchViaDom(\n  href: string,\n  as: string,\n  link?: HTMLLinkElement\n): Promise<any> {\n  return new Promise<void>((res, rej) => {\n    if (document.querySelector(`link[rel=\"prefetch\"][href^=\"${href}\"]`)) {\n      return res()\n    }\n\n    link = document.createElement('link')\n\n    // The order of property assignment here is intentional:\n    if (as) link!.as = as\n    link!.rel = `prefetch`\n    link!.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    link!.onload = res as any\n    link!.onerror = rej\n\n    // `href` should always be last:\n    link!.href = href\n\n    document.head.appendChild(link)\n  })\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR')\n// TODO: unexport\nexport function markAssetError(err: Error): Error {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {})\n}\n\nexport function isAssetError(err?: Error): boolean | undefined {\n  return err && ASSET_LOAD_ERROR in err\n}\n\nfunction appendScript(\n  src: string,\n  script?: HTMLScriptElement\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script')\n\n    // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n    script.onload = resolve\n    script.onerror = () =>\n      reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n\n    // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n\n    // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n    script.src = src\n    document.body.appendChild(script)\n  })\n}\n\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise: Promise<void> | undefined\n\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout<T>(\n  p: Promise<T>,\n  ms: number,\n  err: Error\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let cancelled = false\n\n    p.then((r) => {\n      // Resolved, cancel the timeout\n      cancelled = true\n      resolve(r)\n    }).catch(reject)\n\n    // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n    if (process.env.NODE_ENV === 'development') {\n      ;(devBuildPromise || Promise.resolve()).then(() => {\n        requestIdleCallback(() =>\n          setTimeout(() => {\n            if (!cancelled) {\n              reject(err)\n            }\n          }, ms)\n        )\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'development') {\n      requestIdleCallback(() =>\n        setTimeout(() => {\n          if (!cancelled) {\n            reject(err)\n          }\n        }, ms)\n      )\n    }\n  })\n}\n\n// TODO: stop exporting or cache the failure\n// It'd be best to stop exporting this. It's an implementation detail. We're\n// only exporting it for backwards compatibility with the `page-loader`.\n// Only cache this response as a last resort if we cannot eliminate all other\n// code branches that use the Build Manifest Callback and push them through\n// the Route Loader interface.\nexport function getClientBuildManifest(): Promise<ClientBuildManifest> {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST)\n  }\n\n  const onBuildManifest: Promise<ClientBuildManifest> =\n    new Promise<ClientBuildManifest>((resolve) => {\n      // Mandatory because this is not concurrent safe:\n      const cb = self.__BUILD_MANIFEST_CB\n      self.__BUILD_MANIFEST_CB = () => {\n        resolve(self.__BUILD_MANIFEST!)\n        cb && cb()\n      }\n    })\n\n  return resolvePromiseWithTimeout<ClientBuildManifest>(\n    onBuildManifest,\n    MS_MAX_IDLE_DELAY,\n    markAssetError(new Error('Failed to load client build manifest'))\n  )\n}\n\ninterface RouteFiles {\n  scripts: string[]\n  css: string[]\n}\nfunction getFilesForRoute(\n  assetPrefix: string,\n  route: string\n): Promise<RouteFiles> {\n  if (process.env.NODE_ENV === 'development') {\n    return Promise.resolve({\n      scripts: [\n        assetPrefix +\n          '/_next/static/chunks/pages' +\n          encodeURI(getAssetPathFromRoute(route, '.js')),\n      ],\n      // Styles are handled by `style-loader` in development:\n      css: [],\n    })\n  }\n  return getClientBuildManifest().then((manifest) => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`))\n    }\n    const allFiles = manifest[route].map(\n      (entry) => assetPrefix + '/_next/' + encodeURI(entry)\n    )\n    return {\n      scripts: allFiles.filter((v) => v.endsWith('.js')),\n      css: allFiles.filter((v) => v.endsWith('.css')),\n    }\n  })\n}\n\nexport function createRouteLoader(assetPrefix: string): RouteLoader {\n  const entrypoints: Map<string, Future<RouteEntrypoint> | RouteEntrypoint> =\n    new Map()\n  const loadedScripts: Map<string, Promise<unknown>> = new Map()\n  const styleSheets: Map<string, Promise<RouteStyleSheet>> = new Map()\n  const routes: Map<string, Future<RouteLoaderEntry> | RouteLoaderEntry> =\n    new Map()\n\n  function maybeExecuteScript(src: string): Promise<unknown> {\n    let prom: Promise<unknown> | undefined = loadedScripts.get(src)\n    if (prom) {\n      return prom\n    }\n\n    // Skip executing script if it's already in the DOM:\n    if (document.querySelector(`script[src^=\"${src}\"]`)) {\n      return Promise.resolve()\n    }\n\n    loadedScripts.set(src, (prom = appendScript(src)))\n    return prom\n  }\n\n  function fetchStyleSheet(href: string): Promise<RouteStyleSheet> {\n    let prom: Promise<RouteStyleSheet> | undefined = styleSheets.get(href)\n    if (prom) {\n      return prom\n    }\n\n    styleSheets.set(\n      href,\n      (prom = fetch(href)\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(`Failed to load stylesheet: ${href}`)\n          }\n          return res.text().then((text) => ({ href: href, content: text }))\n        })\n        .catch((err) => {\n          throw markAssetError(err)\n        }))\n    )\n    return prom\n  }\n\n  return {\n    whenEntrypoint(route: string) {\n      return withFuture(route, entrypoints)\n    },\n    onEntrypoint(route: string, execute: () => unknown) {\n      Promise.resolve(execute)\n        .then((fn) => fn())\n        .then(\n          (exports: any) => ({\n            component: (exports && exports.default) || exports,\n            exports: exports,\n          }),\n          (err) => ({ error: err })\n        )\n        .then((input: RouteEntrypoint) => {\n          const old = entrypoints.get(route)\n          entrypoints.set(route, input)\n          if (old && 'resolve' in old) old.resolve(input)\n        })\n    },\n    loadRoute(route: string, prefetch?: boolean) {\n      return withFuture<RouteLoaderEntry>(route, routes, () => {\n        const routeFilesPromise = getFilesForRoute(assetPrefix, route)\n          .then(({ scripts, css }) => {\n            return Promise.all([\n              entrypoints.has(route)\n                ? []\n                : Promise.all(scripts.map(maybeExecuteScript)),\n              Promise.all(css.map(fetchStyleSheet)),\n            ] as const)\n          })\n          .then((res) => {\n            return this.whenEntrypoint(route).then((entrypoint) => ({\n              entrypoint,\n              styles: res[1],\n            }))\n          })\n\n        if (process.env.NODE_ENV === 'development') {\n          devBuildPromise = new Promise<void>((resolve) => {\n            if (routeFilesPromise) {\n              return routeFilesPromise.finally(() => {\n                resolve()\n              })\n            }\n          })\n        }\n\n        return resolvePromiseWithTimeout(\n          routeFilesPromise,\n          MS_MAX_IDLE_DELAY,\n          markAssetError(new Error(`Route did not complete loading: ${route}`))\n        )\n          .then(({ entrypoint, styles }) => {\n            const res: RouteLoaderEntry = Object.assign<\n              { styles: RouteStyleSheet[] },\n              RouteEntrypoint\n            >({ styles: styles! }, entrypoint)\n            return 'error' in entrypoint ? entrypoint : res\n          })\n          .catch((err) => {\n            if (prefetch) {\n              // we don't want to cache errors during prefetch\n              throw err\n            }\n            return { error: err }\n          })\n      })\n    },\n    prefetch(route: string): Promise<void> {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn\n      if ((cn = (navigator as any).connection)) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n      }\n      return getFilesForRoute(assetPrefix, route)\n        .then((output) =>\n          Promise.all(\n            canPrefetch\n              ? output.scripts.map((script) => prefetchViaDom(script, 'script'))\n              : []\n          )\n        )\n        .then(() => {\n          requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}))\n        })\n        .catch(\n          // swallow prefetch errors\n          () => {}\n        )\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}