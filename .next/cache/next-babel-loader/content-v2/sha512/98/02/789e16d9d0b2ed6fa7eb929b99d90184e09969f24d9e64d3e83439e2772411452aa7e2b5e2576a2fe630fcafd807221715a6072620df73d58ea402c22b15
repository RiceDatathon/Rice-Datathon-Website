{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/gazifuad/Documents/Documents - Gazi's MacBook Pro/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _s = $RefreshSig$();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouteAnnouncer = RouteAnnouncer;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"./router\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction RouteAnnouncer() {\n  _s();\n\n  var _useRouter = (0, _router).useRouter(),\n      asPath = _useRouter.asPath;\n\n  var _react$default$useSta = _react[\"default\"].useState(''),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      routeAnnouncement = _react$default$useSta2[0],\n      setRouteAnnouncement = _react$default$useSta2[1]; // Only announce the path change, but not for the first load because screen reader will do that automatically.\n\n\n  var initialPathLoaded = _react[\"default\"].useRef(false); // Every time the path changes, announce the route change. The announcement will be prioritized by h1, then title\n  // (from metadata), and finally if those don't exist, then the pathName that is in the URL. This methodology is\n  // inspired by Marcy Sutton's accessible client routing user testing. More information can be found here:\n  // https://www.gatsbyjs.com/blog/2019-07-11-user-testing-accessible-client-routing/\n\n\n  _react[\"default\"].useEffect(function () {\n    if (!initialPathLoaded.current) {\n      initialPathLoaded.current = true;\n      return;\n    }\n\n    var newRouteAnnouncement;\n    var pageHeader = document.querySelector('h1');\n\n    if (pageHeader) {\n      newRouteAnnouncement = pageHeader.innerText || pageHeader.textContent;\n    }\n\n    if (!newRouteAnnouncement) {\n      if (document.title) {\n        newRouteAnnouncement = document.title;\n      } else {\n        newRouteAnnouncement = asPath;\n      }\n    }\n\n    setRouteAnnouncement(newRouteAnnouncement);\n  }, // TODO: switch to pathname + query object of dynamic route requirements\n  [asPath]);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n    \"aria-live\": \"assertive\" // Make the announcement immediately.\n    ,\n    id: \"__next-route-announcer__\",\n    role: \"alert\",\n    style: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      width: '1px',\n      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n      whiteSpace: 'nowrap',\n      wordWrap: 'normal'\n    }\n  }, routeAnnouncement);\n}\n\n_s(RouteAnnouncer, \"lpE1qTfKkoN0hZau61j+whW+4H0=\", true);\n\n_c = RouteAnnouncer;\nvar _default = RouteAnnouncer;\nexports[\"default\"] = _default;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteAnnouncer\");","map":{"version":3,"sources":["../../client/route-announcer.tsx"],"names":[],"mappings":";;;;;;;;;QAGgB,c,GAAA,c;;;AAHE,IAAA,MAAO,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAP;;AACQ,IAAA,OAAU,GAAA,OAAA,CAAA,UAAA,CAAV;;;;;;;;SAEV,c,GAAiB;AAAA;;AAC/B,mBAAc,CAAA,GAHU,OAGV,EAHoB,SAGpB,EAAd;AAAA,MAAQ,MAAR,cAAQ,MAAR;;AACA,8BALgB,MAAO,WAAP,CAKwC,QALxC,CAKgD,EALhD,CAKhB;AAAA;AAAA,MAAO,iBAAP;AAAA,MAA0B,oBAA1B,6BAF+B,CAI/B;;;AACA,MAAM,iBAAiB,GARP,MAAO,WAAP,CAQgB,MARhB,CAQuB,KARvB,CAQhB,CAL+B,CAO/B;AACA;AACA;AACA;;;AAbgB,EAAA,MAAO,WAAP,CAcV,SAdU,CAcD,YACP;AACJ,QAAE,CAAG,iBAAiB,CAAC,OAAvB,EAAgC;AAC9B,MAAA,iBAAiB,CAAC,OAAlB,GAA4B,IAA5B;;AAED;;AAED,QAAI,oBAAJ;AACA,QAAM,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAsB,IAAtB,CAAnB;;AAEA,QAAI,UAAJ,EAAgB;AACd,MAAA,oBAAoB,GAAG,UAAU,CAAC,SAAX,IAAwB,UAAU,CAAC,WAA1D;AACD;;AACD,QAAE,CAAG,oBAAL,EAA2B;AACzB,UAAI,QAAQ,CAAC,KAAb,EAAoB;AAClB,QAAA,oBAAoB,GAAG,QAAQ,CAAC,KAAhC;AACD,OAFD,MAEO;AACL,QAAA,oBAAoB,GAAG,MAAvB;AACD;AACF;;AAED,IAAA,oBAAoB,CAAC,oBAAD,CAApB;AACD,GApCa,EAqCd;GACC,M,CAtCa;;sBAAA,MAAO,WAAP,CAAO,aAAP,CAAO,GAAP,EA0CZ;AACA,iBAAS,WADT,CACsB;AADtB;AAEA,IAAA,EAAE,EAAA,0BAFF;AAGA,IAAA,IAAI,EAAA,OAHJ;AAIA,IAAA,KAAK,EAAA;AACH,MAAA,MAAM,EAAE,CADL;AAEH,MAAA,IAAI,EAAA,eAFD;AAGH,MAAA,MAAM,EAAA,KAHH;AAIH,MAAA,MAAM,EAAA,MAJH;AAKH,MAAA,QAAQ,EAAA,QALL;AAMH,MAAA,OAAO,EAAE,CANN;AAOH,MAAA,QAAQ,EAAA,UAPL;AAQH,MAAA,KAAK,EAAA,KARF;AAUH;AACA,MAAA,UAAU,EAAA,QAXP;AAYH,MAAA,QAAQ,EAAA;AAZL;AAJL,GA1CY,EA6DX,iBA7DW,C;AAgEjB;;GA7De,c;;KAAA,c;eA+DD,c","sourcesContent":["import React from 'react'\nimport { useRouter } from './router'\n\nexport function RouteAnnouncer() {\n  const { asPath } = useRouter()\n  const [routeAnnouncement, setRouteAnnouncement] = React.useState('')\n\n  // Only announce the path change, but not for the first load because screen reader will do that automatically.\n  const initialPathLoaded = React.useRef(false)\n\n  // Every time the path changes, announce the route change. The announcement will be prioritized by h1, then title\n  // (from metadata), and finally if those don't exist, then the pathName that is in the URL. This methodology is\n  // inspired by Marcy Sutton's accessible client routing user testing. More information can be found here:\n  // https://www.gatsbyjs.com/blog/2019-07-11-user-testing-accessible-client-routing/\n  React.useEffect(\n    () => {\n      if (!initialPathLoaded.current) {\n        initialPathLoaded.current = true\n        return\n      }\n\n      let newRouteAnnouncement\n      const pageHeader = document.querySelector('h1')\n\n      if (pageHeader) {\n        newRouteAnnouncement = pageHeader.innerText || pageHeader.textContent\n      }\n      if (!newRouteAnnouncement) {\n        if (document.title) {\n          newRouteAnnouncement = document.title\n        } else {\n          newRouteAnnouncement = asPath\n        }\n      }\n\n      setRouteAnnouncement(newRouteAnnouncement)\n    },\n    // TODO: switch to pathname + query object of dynamic route requirements\n    [asPath]\n  )\n\n  return (\n    <p\n      aria-live=\"assertive\" // Make the announcement immediately.\n      id=\"__next-route-announcer__\"\n      role=\"alert\"\n      style={{\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        width: '1px',\n\n        // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n        whiteSpace: 'nowrap',\n        wordWrap: 'normal',\n      }}\n    >\n      {routeAnnouncement}\n    </p>\n  )\n}\n\nexport default RouteAnnouncer\n"]},"metadata":{},"sourceType":"script"}