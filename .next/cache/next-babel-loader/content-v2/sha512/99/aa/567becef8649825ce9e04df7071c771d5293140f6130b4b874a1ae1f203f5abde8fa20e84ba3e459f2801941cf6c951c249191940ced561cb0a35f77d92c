{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./\");\n\nvar _eventSourcePolyfill = _interopRequireDefault(require(\"./dev/event-source-polyfill\"));\n\nvar _onDemandEntriesClient = _interopRequireDefault(require(\"./dev/on-demand-entries-client\"));\n\nvar _webpackHotMiddlewareClient = _interopRequireDefault(require(\"./dev/webpack-hot-middleware-client\"));\n\nvar _devBuildWatcher = _interopRequireDefault(require(\"./dev/dev-build-watcher\"));\n\nvar _fouc = require(\"./dev/fouc\");\n\nvar _eventsource = require(\"./dev/error-overlay/eventsource\");\n\nvar _querystring = require(\"../shared/lib/router/utils/querystring\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n\n\nimport('./dev/noop');\n; // Support EventSource on Internet Explorer 11\n\nif (!window.EventSource) {\n  window.EventSource = _eventSourcePolyfill[\"default\"];\n}\n\nvar _window = window,\n    assetPrefix = _window.__NEXT_DATA__.assetPrefix;\nvar prefix = assetPrefix || '';\nvar webpackHMR = (0, _webpackHotMiddlewareClient)[\"default\"]();\nwindow.next = {\n  version: _.version,\n\n  // router is initialized later so it has to be live-binded\n  get router() {\n    return _.router;\n  },\n\n  emitter: _.emitter,\n  render: _.render,\n  renderError: _.renderError\n};\n(0, _).initNext({\n  webpackHMR: webpackHMR\n}).then(function (_ref) {\n  var renderCtx = _ref.renderCtx;\n  (0, _onDemandEntriesClient)[\"default\"]({\n    assetPrefix: prefix\n  });\n\n  var buildIndicatorHandler = function buildIndicatorHandler() {};\n\n  function devPagesManifestListener(event) {\n    if (event.data.indexOf('devPagesManifest') !== -1) {\n      fetch(\"\".concat(prefix, \"/_next/static/development/_devPagesManifest.json\")).then(function (res) {\n        return res.json();\n      }).then(function (manifest) {\n        window.__DEV_PAGES_MANIFEST = manifest;\n      })[\"catch\"](function (err) {\n        console.log(\"Failed to fetch devPagesManifest\", err);\n      });\n    } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n      var _JSON$parse = JSON.parse(event.data),\n          pages = _JSON$parse.pages; // Make sure to reload when the dev-overlay is showing for an\n      // API route\n\n\n      if (pages.includes(_.router.query.__NEXT_PAGE)) {\n        return window.location.reload();\n      }\n\n      if (!_.router.clc && pages.includes(_.router.pathname)) {\n        console.log('Refreshing page data due to server-side change');\n        buildIndicatorHandler('building');\n\n        var clearIndicator = function clearIndicator() {\n          return buildIndicatorHandler('built');\n        };\n\n        _.router.replace(_.router.pathname + '?' + String((0, _querystring).assign((0, _querystring).urlQueryToSearchParams(_.router.query), new URLSearchParams(location.search))), _.router.asPath)[\"finally\"](clearIndicator);\n      }\n    }\n  }\n\n  devPagesManifestListener.unfiltered = true;\n  (0, _eventsource).addMessageListener(devPagesManifestListener);\n\n  if (process.env.__NEXT_BUILD_INDICATOR) {\n    (0, _devBuildWatcher)[\"default\"](function (handler) {\n      buildIndicatorHandler = handler;\n    });\n  } // delay rendering until after styles have been applied in development\n\n\n  (0, _fouc).displayContent(function () {\n    (0, _).render(renderCtx);\n  });\n})[\"catch\"](function (err) {\n  console.error('Error was not caught', err);\n});","map":{"version":3,"sources":["../../client/next-dev.js"],"names":[],"mappings":";;AACwE,IAAA,CAAI,GAAA,OAAA,CAAA,IAAA,CAAJ;;AACxC,IAAA,oBAA6B,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAA7B;;AACA,IAAA,sBAAgC,GAAA,sBAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAhC;;AACL,IAAA,2BAAqC,GAAA,sBAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAArC;;AACQ,IAAA,gBAAyB,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAzB;;AACJ,IAAA,KAAY,GAAA,OAAA,CAAA,YAAA,CAAZ;;AACI,IAAA,YAAiC,GAAA,OAAA,CAAA,iCAAA,CAAjC;;AAI5B,IAAA,YAAwC,GAAA,OAAA,CAAA,wCAAA,CAAxC;;;;;;EAEP;AACA;AACA;AACA;AACA;;;AACA,OAAA,YAAA;AAAA,C,CAEA;;AACA,IAAE,CAAG,MAAM,CAAC,WAAZ,EAAyB;AACvB,EAAA,MAAM,CAAC,WAAP,GApB8B,oBAA6B,WAoB3D;AACD;;AAED,cAEI,MAFJ;AAAA,IACmB,WADnB,WACE,aADF,CACmB,WADnB;AAIA,IAAM,MAAM,GAAG,WAAW,IAAA,EAA1B;AACA,IAAM,UAAU,GAAA,CAAA,GA1BW,2BA0BX,cAAhB;AAEA,MAAM,CAAC,IAAP,GAAW;AACT,EAAA,OAAO,EAhC+D,CAAI,CAAA,OA+BjE;;AAET;MACI,M,GAAS;WAlCyD,CAAI,CAAA,M;AAoCzE,GALQ;;AAMT,EAAA,OAAO,EArC+D,CAAI,CAAA,OA+BjE;AAOT,EAAA,MAAM,EAtCgE,CAAI,CAAA,MA+BjE;AAQT,EAAA,WAAW,EAvC2D,CAAI,CAAA;AA+BjE,CAAX;IA/BwE,C,EAAI,Q,CAAA;AAyCjE,EAAA,UAAU,EAAV;AAzCiE,C,EA0CzE,I,CAAI,gBAAoB;AAAA,MAAhB,SAAgB,QAAhB,SAAgB;MAxCK,sB,aAAgC;AAyCtC,IAAA,WAAW,EAAE;AAzCyB,G;;AA2C5D,MAAI,qBAAqB,GAAA,iCAAS,CAAE,CAApC;;WAES,wB,CAAyB,K,EAAO;AACvC,QAAI,KAAK,CAAC,IAAN,CAAW,OAAX,CAAkB,kBAAlB,MAAqC,CAAO,CAAhD,EAAmD;AACjD,MAAA,KAAK,WAAI,MAAJ,sDAAL,CACG,IADH,CACO,UAAE,GAAF;AAAA,eAAU,GAAG,CAAC,IAAJ,EAAV;AAAA,OADP,EAEG,IAFH,CAEO,UAAE,QAAF,EAAe;AAClB,QAAA,MAAM,CAAC,oBAAP,GAA8B,QAA9B;AACD,OAJH,WAKQ,UAAE,GAAF,EAAU;AACd,QAAA,OAAO,CAAC,GAAR,qCAAgD,GAAhD;AACD,OAPH;AAQD,KATD,MASO,IAAI,KAAK,CAAC,IAAN,CAAW,OAAX,CAAkB,mBAAlB,MAAsC,CAAO,CAAjD,EAAoD;AACzD,wBAAkB,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,IAAjB,CAAlB;AAAA,UAAQ,KAAR,eAAQ,KAAR,CADyD,CAGzD;AACA;;;AACA,UAAI,KAAK,CAAC,QAAN,CA9D4D,CAAI,CAAA,MAAJ,CA8DtC,KA9DsC,CA8DhC,WAA5B,CAAJ,EAA8C;eACrC,MAAM,CAAC,QAAP,CAAgB,MAAhB,E;AACR;;AAED,UAAE,CAlE8D,CAAI,CAAA,MAAJ,CAkEpD,GAAV,IAAiB,KAAK,CAAC,QAAN,CAlE6C,CAAI,CAAA,MAAJ,CAkEvB,QAAtB,CAAnB,EAAoD;AAClD,QAAA,OAAO,CAAC,GAAR,CAAW,gDAAX;AAEA,QAAA,qBAAqB,CAAA,UAAA,CAArB;;AAEA,YAAM,cAAc,GAAA,SAAd,cAAc;AAAA,iBAAS,qBAAqB,CAAA,OAAA,CAA9B;AAAA,SAApB;;AAvE8D,QAAA,CAAI,CAAA,MAAJ,CA0E3D,OA1E2D,CAAA,CAAI,CAAA,MAAJ,CA2EnD,QA3EmD,GA2E3C,GA3E2C,GA6ExD,MAAM,CAAA,CAAA,GAnEf,YAmEe,EAnEyB,MAmEzB,CAnEyB,CAAA,GAAxC,YAAwC,EAAA,sBAAA,CAVyB,CAAI,CAAA,MAAJ,CA+EtB,KArEH,CAmEzB,EAGF,IAAI,eAAJ,CAAoB,QAAQ,CAAC,MAA7B,CAHE,CAAA,CA7EkD,EAAA,CAAI,CAAA,MAAJ,CAmFnD,MAnFmD,aAqFnD,cArFmD;AAsF/D;AACF;AACF;;AACD,EAAA,wBAAwB,CAAC,UAAzB,GAAsC,IAAtC;MAnF+B,Y,EAAiC,kB,CAoF7C,wB;;AAEnB,MAAI,OAAO,CAAC,GAAR,CAAY,sBAAhB,EAAwC;QAxFT,gB,aAAyB,UAyF9B,OAzF8B,EAyFlB;AAClC,MAAA,qBAAqB,GAAG,OAAxB;AACD,K;AACF,GAtDsB,CAwDvB;;;MA7F2B,K,EAAY,c,CAAA,YA8FlB;QAnG+C,C,EAAI,M,CAoG/D,S;AACR,G;AACF,C,WACK,UAAE,GAAF,EAAU;AACd,EAAA,OAAO,CAAC,KAAR,CAAa,sBAAb,EAAsC,GAAtC;AACD,C","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport { initNext, version, router, emitter, render, renderError } from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport { displayContent } from './dev/fouc'\nimport { addMessageListener } from './dev/error-overlay/eventsource'\nimport {\n  assign,\n  urlQueryToSearchParams,\n} from '../shared/lib/router/utils/querystring'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR()\n\nwindow.next = {\n  version,\n  // router is initialized later so it has to be live-binded\n  get router() {\n    return router\n  },\n  emitter,\n  render,\n  renderError,\n}\ninitNext({ webpackHMR })\n  .then(({ renderCtx }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n\n    let buildIndicatorHandler = () => {}\n\n    function devPagesManifestListener(event) {\n      if (event.data.indexOf('devPagesManifest') !== -1) {\n        fetch(`${prefix}/_next/static/development/_devPagesManifest.json`)\n          .then((res) => res.json())\n          .then((manifest) => {\n            window.__DEV_PAGES_MANIFEST = manifest\n          })\n          .catch((err) => {\n            console.log(`Failed to fetch devPagesManifest`, err)\n          })\n      } else if (event.data.indexOf('serverOnlyChanges') !== -1) {\n        const { pages } = JSON.parse(event.data)\n\n        // Make sure to reload when the dev-overlay is showing for an\n        // API route\n        if (pages.includes(router.query.__NEXT_PAGE)) {\n          return window.location.reload()\n        }\n\n        if (!router.clc && pages.includes(router.pathname)) {\n          console.log('Refreshing page data due to server-side change')\n\n          buildIndicatorHandler('building')\n\n          const clearIndicator = () => buildIndicatorHandler('built')\n\n          router\n            .replace(\n              router.pathname +\n                '?' +\n                String(\n                  assign(\n                    urlQueryToSearchParams(router.query),\n                    new URLSearchParams(location.search)\n                  )\n                ),\n              router.asPath\n            )\n            .finally(clearIndicator)\n        }\n      }\n    }\n    devPagesManifestListener.unfiltered = true\n    addMessageListener(devPagesManifestListener)\n\n    if (process.env.__NEXT_BUILD_INDICATOR) {\n      initializeBuildWatcher((handler) => {\n        buildIndicatorHandler = handler\n      })\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]},"metadata":{},"sourceType":"script"}