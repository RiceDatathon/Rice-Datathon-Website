{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/gazifuad/Documents/Documents - Gazi's MacBook Pro/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _s = $RefreshSig$();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _headManagerContext = require(\"../shared/lib/head-manager-context\");\n\nvar _headManager = require(\"./head-manager\");\n\nvar _requestIdleCallback = require(\"./request-idle-callback\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ScriptCache = new Map();\nvar LoadCache = new Set();\nvar ignoreProps = ['onLoad', 'dangerouslySetInnerHTML', 'children', 'onError', 'strategy'];\n\nvar loadScript = function loadScript(props) {\n  var src = props.src,\n      id = props.id,\n      _props$onLoad = props.onLoad,\n      onLoad = _props$onLoad === void 0 ? function () {} : _props$onLoad,\n      dangerouslySetInnerHTML = props.dangerouslySetInnerHTML,\n      _props$children = props.children,\n      children = _props$children === void 0 ? '' : _props$children,\n      _props$strategy = props.strategy,\n      strategy = _props$strategy === void 0 ? 'afterInteractive' : _props$strategy,\n      onError = props.onError;\n  var cacheKey = id || src; // Script has already loaded\n\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return;\n  } // Contents of this script are already loading/loaded\n\n\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey); // Execute onLoad since the script loading has begun\n\n    ScriptCache.get(src).then(onLoad, onError);\n    return;\n  }\n\n  var el = document.createElement('script');\n  var loadPromise = new Promise(function (resolve, reject) {\n    el.addEventListener('load', function (e) {\n      resolve();\n\n      if (onLoad) {\n        onLoad.call(this, e);\n      }\n    });\n    el.addEventListener('error', function (e) {\n      reject(e);\n    });\n  })[\"catch\"](function (e) {\n    if (onError) {\n      onError(e);\n    }\n  });\n\n  if (src) {\n    ScriptCache.set(src, loadPromise);\n  }\n\n  LoadCache.add(cacheKey);\n\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n  } else if (src) {\n    el.src = src;\n  }\n\n  for (var _i = 0, _Object$entries = Object.entries(props); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        k = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (value === undefined || ignoreProps.includes(k)) {\n      continue;\n    }\n\n    var attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n    el.setAttribute(attr, value);\n  }\n\n  el.setAttribute('data-nscript', strategy);\n  document.body.appendChild(el);\n};\n\nfunction handleClientScriptLoad(props) {\n  var _props$strategy2 = props.strategy,\n      strategy = _props$strategy2 === void 0 ? 'afterInteractive' : _props$strategy2;\n\n  if (strategy === 'afterInteractive') {\n    loadScript(props);\n  } else if (strategy === 'lazyOnload') {\n    window.addEventListener('load', function () {\n      (0, _requestIdleCallback).requestIdleCallback(function () {\n        return loadScript(props);\n      });\n    });\n  }\n}\n\nfunction loadLazyScript(props) {\n  if (document.readyState === 'complete') {\n    (0, _requestIdleCallback).requestIdleCallback(function () {\n      return loadScript(props);\n    });\n  } else {\n    window.addEventListener('load', function () {\n      (0, _requestIdleCallback).requestIdleCallback(function () {\n        return loadScript(props);\n      });\n    });\n  }\n}\n\nfunction initScriptLoader(scriptLoaderItems) {\n  scriptLoaderItems.forEach(handleClientScriptLoad);\n}\n\nfunction Script(props) {\n  _s();\n\n  var _props$src = props.src,\n      src = _props$src === void 0 ? '' : _props$src,\n      _props$onLoad2 = props.onLoad,\n      onLoad = _props$onLoad2 === void 0 ? function () {} : _props$onLoad2,\n      dangerouslySetInnerHTML = props.dangerouslySetInnerHTML,\n      _props$strategy3 = props.strategy,\n      strategy = _props$strategy3 === void 0 ? 'afterInteractive' : _props$strategy3,\n      onError = props.onError,\n      restProps = _objectWithoutProperties(props, [\"src\", \"onLoad\", \"dangerouslySetInnerHTML\", \"strategy\", \"onError\"]); // Context is available only during SSR\n\n\n  var _useContext = (0, _react).useContext(_headManagerContext.HeadManagerContext),\n      updateScripts = _useContext.updateScripts,\n      scripts = _useContext.scripts,\n      getIsSsr = _useContext.getIsSsr;\n\n  (0, _react).useEffect(function () {\n    if (strategy === 'afterInteractive') {\n      loadScript(props);\n    } else if (strategy === 'lazyOnload') {\n      loadLazyScript(props);\n    }\n  }, [props, strategy]);\n\n  if (strategy === 'beforeInteractive') {\n    if (updateScripts) {\n      scripts.beforeInteractive = (scripts.beforeInteractive || []).concat([_objectSpread({\n        src: src,\n        onLoad: onLoad,\n        onError: onError\n      }, restProps)]);\n      updateScripts(scripts);\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(restProps.id || src);\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props);\n    }\n  }\n\n  return null;\n}\n\n_s(Script, \"e8WGedLHPLUuZjHFS2+Zt0avCrA=\");\n\n_c = Script;\nvar _default = Script;\nexports[\"default\"] = _default;\n\nvar _c;\n\n$RefreshReg$(_c, \"Script\");","map":{"version":3,"sources":["../../client/script.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context'\nimport { DOMAttributeNames } from './head-manager'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive'\n  id?: string\n  onLoad?: (e: any) => void\n  onError?: (e: any) => void\n  children?: React.ReactNode\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst ignoreProps = [\n  'onLoad',\n  'dangerouslySetInnerHTML',\n  'children',\n  'onError',\n  'strategy',\n]\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // Execute onLoad since the script loading has begun\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (src) {\n    ScriptCache.set(src, loadPromise)\n  }\n  LoadCache.add(cacheKey)\n\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n        ? children.join('')\n        : ''\n  } else if (src) {\n    el.src = src\n  }\n\n  for (const [k, value] of Object.entries(props)) {\n    if (value === undefined || ignoreProps.includes(k)) {\n      continue\n    }\n\n    const attr = DOMAttributeNames[k] || k.toLowerCase()\n    el.setAttribute(attr, value)\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  document.body.appendChild(el)\n}\n\nfunction handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'afterInteractive') {\n    loadScript(props)\n  } else if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n}\n\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    src = '',\n    onLoad = () => {},\n    dangerouslySetInnerHTML,\n    strategy = 'afterInteractive',\n    onError,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  const { updateScripts, scripts, getIsSsr } = useContext(HeadManagerContext)\n\n  useEffect(() => {\n    if (strategy === 'afterInteractive') {\n      loadScript(props)\n    } else if (strategy === 'lazyOnload') {\n      loadLazyScript(props)\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive') {\n    if (updateScripts) {\n      scripts.beforeInteractive = (scripts.beforeInteractive || []).concat([\n        {\n          src,\n          onLoad,\n          onError,\n          ...restProps,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(restProps.id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props)\n    }\n  }\n\n  return null\n}\n\nexport default Script\n"]},"metadata":{},"sourceType":"script"}