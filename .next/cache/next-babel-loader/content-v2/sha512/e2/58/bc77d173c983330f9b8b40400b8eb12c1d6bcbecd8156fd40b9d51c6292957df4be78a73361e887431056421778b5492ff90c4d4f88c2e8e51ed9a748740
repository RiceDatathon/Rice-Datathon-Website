{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"../shared/lib/router/router\");\n\nvar _router1 = require(\"./router\");\n\nvar _useIntersection = require(\"./use-intersection\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst prefetched = {};\n\nfunction prefetch(router, href, as, options) {\n  if (true || !router) return;\n  if (!(0, _router).isLocalURL(href)) return; // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n\n  router.prefetch(href, as, options).catch(err => {\n    if (true) {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n  const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale; // Join on an invalid URI character\n\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\n\nfunction isModifiedEvent(event) {\n  const {\n    target\n  } = event.currentTarget;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\n\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n  const {\n    nodeName\n  } = e.currentTarget;\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n\n  e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n  if (scroll == null && as.indexOf('#') >= 0) {\n    scroll = false;\n  } // replace state instead of push if prop is present\n\n\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll\n  });\n}\n\nfunction Link(props) {\n  if (true) {\n    function createPropError(args) {\n      return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + (false ? \"\\nOpen your browser's console to view the Component stack trace.\" : ''));\n    } // TypeScript trick for type-guarding:\n\n\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // TypeScript trick for type-guarding:\n\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const hasWarned = _react.default.useRef(false);\n\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n    }\n  }\n\n  const p = props.prefetch !== false;\n  const router = (0, _router1).useRouter();\n\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, props.href, true);\n    return {\n      href: resolvedHref,\n      as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n    };\n  }, [router, props.href, props.as]);\n\n  let {\n    children,\n    replace,\n    shallow,\n    scroll,\n    locale\n  } = props; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n\n  if (typeof children === 'string') {\n    children = /*#__PURE__*/_react.default.createElement(\"a\", null, children);\n  } // This will return the first child, if multiple are provided it will throw an error\n\n\n  let child;\n\n  if (true) {\n    try {\n      child = _react.default.Children.only(children);\n    } catch (err) {\n      throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + (false ? \" \\nOpen your browser's console to view the Component stack trace.\" : ''));\n    }\n  } else {\n    child = _react.default.Children.only(children);\n  }\n\n  const childRef = child && typeof child === 'object' && child.ref;\n  const [setIntersectionRef, isVisible] = (0, _useIntersection).useIntersection({\n    rootMargin: '200px'\n  });\n\n  const setRef = _react.default.useCallback(el => {\n    setIntersectionRef(el);\n\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [childRef, setIntersectionRef]);\n\n  _react.default.useEffect(() => {\n    const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n    const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale\n      });\n    }\n  }, [as, href, isVisible, locale, p, router]);\n\n  const childProps = {\n    ref: setRef,\n    onClick: e => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n      }\n    }\n  };\n\n  childProps.onMouseEnter = e => {\n    if (!(0, _router).isLocalURL(href)) return;\n\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e);\n    }\n\n    prefetch(router, href, as, {\n      priority: true\n    });\n  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n\n\n  if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale; // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n\n    const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n    childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n  }\n\n  return /*#__PURE__*/_react.default.cloneElement(child, childProps);\n}\n\nvar _default = Link;\nexports.default = _default;","map":{"version":3,"sources":["../../client/link.tsx"],"names":[],"mappings":";;;;;;;AAAkB,IAAA,MAAO,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAP;;AAUX,IAAA,OAA6B,GAAA,OAAA,CAAA,6BAAA,CAA7B;;AACmB,IAAA,QAAU,GAAA,OAAA,CAAA,UAAA,CAAV;;AACM,IAAA,gBAAoB,GAAA,OAAA,CAAA,oBAAA,CAApB;;;;;;;;AAuBhC,MAAM,UAAU,GAAA,EAAhB;;SAES,Q,CACP,M,EACA,I,EACA,E,EACA,O,EACM;AACN,MAAE,QAA+B,CAAK,MAAtC,EAA4C;AAC5C,MAAE,CAAA,CAAA,GAlCG,OAkCH,EAlCgC,UAkChC,CAAc,IAAd,CAAF,EAAoB,OAFd,CAGN;AACA;AACA;AACA;;AACA,EAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,EAAsB,EAAtB,EAA0B,OAA1B,EAAmC,KAAnC,CAA0C,GAAF,IAAU;AAChD,cAA2C;AACzC;AACA,YAAM,GAAN;AACD;AACF,GALD;AAMA,QAAM,SAAS,GACb,OAAO,IAAA,OAAW,OAAO,CAAC,MAAnB,KAAyB,WAAhC,GACI,OAAO,CAAC,MADZ,GAEI,MAAM,IAAI,MAAM,CAAC,MAHvB,CAbM,CAkBN;;AACA,EAAA,UAAU,CAAC,IAAI,GAAA,GAAJ,GAAa,EAAb,IAAmB,SAAS,GAAA,MAAS,SAAT,GAAkB,EAA9C,CAAD,CAAV,GAAmE,IAAnE;AACD;;SAEQ,e,CAAgB,K,EAAkC;AACzD,QAAK;AAAG,IAAA;AAAH,MAAc,KAAK,CAAC,aAAzB;SAEG,MAAM,IAAI,MAAM,KAAA,OAAhB,IACD,KAAK,CAAC,OADL,IAED,KAAK,CAAC,OAFL,IAGD,KAAK,CAAC,QAHL,IAID,KAAK,CAAC,MAJL,IAKA,KAAK,CAAC,WAAN,IAAqB,KAAK,CAAC,WAAN,CAAkB,KAAlB,KAA4B,C;AAErD;;SAEQ,W,CACP,C,EACA,M,EACA,I,EACA,E,EACA,O,EACA,O,EACA,M,EACA,M,EACM;AACN,QAAK;AAAG,IAAA;AAAH,MAAgB,CAAC,CAAC,aAAvB;;AAEA,MAAI,QAAQ,KAAA,GAAR,KAAqB,eAAe,CAAC,CAAD,CAAf,IAAiB,CAAA,CAAA,GA9ErC,OA8EqC,EA9ER,UA8EQ,CAAiB,IAAjB,CAAtC,CAAJ,EAAmE;AACjE;;AAED;;AAED,EAAA,CAAC,CAAC,cAAF,GARM,CAUN;;AACA,MAAI,MAAM,IAAI,IAAV,IAAkB,EAAE,CAAC,OAAH,CAAU,GAAV,KAAmB,CAAzC,EAA4C;AAC1C,IAAA,MAAM,GAAG,KAAT;AACD,GAbK,CAeN;;;AACA,EAAA,MAAM,CAAC,OAAO,GAAA,SAAA,GAAY,MAApB,CAAN,CAAqC,IAArC,EAA2C,EAA3C,EAA6C;AAC3C,IAAA,OAD2C;AAE3C,IAAA,MAF2C;AAG3C,IAAA;AAH2C,GAA7C;AAKD;;SAEQ,I,CAAK,K,EAA2C;AACvD,YAA2C;aAChC,e,CAAgB,I,EAItB;aACM,IAAI,KAAJ,CACJ,gCAA+B,IAAI,CAAC,GAAI,gBAAe,IAAI,CAAC,QAAS,6BAA4B,IAAI,CAAC,MAAO,aADhG,IAC2G,QACzF,kEADyF,GAEjD,EAH1D,CAAT,C;AAMR,KAZwC,CAczC;;;AACA,UAAM,kBAAkB,GAAA;AACtB,MAAA,IAAI,EAAE;AADgB,KAAxB;AAGA,UAAM,aAAa,GAAwB,MAAM,CAAC,IAAP,CACzC,kBADyC,CAA3C;AAGA,IAAA,aAAa,CAAC,OAAd,CAAuB,GAAF,IAA6B;AAChD,UAAI,GAAG,KAAA,MAAP,EAAoB;AAClB,YACE,KAAK,CAAC,GAAD,CAAL,IAAc,IAAd,IAAkB,OACV,KAAK,CAAC,GAAD,CADK,KACD,QADC,IACa,OAAW,KAAK,CAAC,GAAD,CAAhB,KAAoB,QAFrD,EAGE;AACA,gBAAM,eAAe,CAAA;AACnB,YAAA,GADmB;AAEnB,YAAA,QAAQ,EAAA,sBAFW;AAGnB,YAAA,MAAM,EAAE,KAAK,CAAC,GAAD,CAAL,KAAe,IAAf,GAAmB,MAAnB,GAA4B,OAAU,KAAK,CAAC,GAAD;AAHhC,WAAA,CAArB;AAKD;AACF,OAXD,MAWO;AACL;AACA;AACA,cAAM,CAAC,GAAU,GAAjB;AACD;AACF,KAjBD,EArByC,CAwCzC;;AACA,UAAM,kBAAkB,GAAA;AACtB,MAAA,EAAE,EAAE,IADkB;AAEtB,MAAA,OAAO,EAAE,IAFa;AAGtB,MAAA,MAAM,EAAE,IAHc;AAItB,MAAA,OAAO,EAAE,IAJa;AAKtB,MAAA,QAAQ,EAAE,IALY;AAMtB,MAAA,QAAQ,EAAE,IANY;AAOtB,MAAA,MAAM,EAAE;AAPc,KAAxB;AASA,UAAM,aAAa,GAAwB,MAAM,CAAC,IAAP,CACzC,kBADyC,CAA3C;AAGA,IAAA,aAAa,CAAC,OAAd,CAAuB,GAAF,IAA6B;AAChD,YAAM,OAAO,GAAA,OAAU,KAAK,CAAC,GAAD,CAA5B;;AAEA,UAAI,GAAG,KAAA,IAAP,EAAkB;AAChB,YAAI,KAAK,CAAC,GAAD,CAAL,IAAc,OAAO,KAAA,QAArB,IAAsC,OAAO,KAAA,QAAjD,EAAgE;AAC9D,gBAAM,eAAe,CAAA;AACnB,YAAA,GADmB;AAEnB,YAAA,QAAQ,EAAA,sBAFW;AAGnB,YAAA,MAAM,EAAE;AAHW,WAAA,CAArB;AAKD;AACF,OARD,MAQO,IAAI,GAAG,KAAA,QAAP,EAAsB;AAC3B,YAAI,KAAK,CAAC,GAAD,CAAL,IAAc,OAAO,KAAA,QAAzB,EAAwC;AACtC,gBAAM,eAAe,CAAA;AACnB,YAAA,GADmB;AAEnB,YAAA,QAAQ,EAAA,UAFW;AAGnB,YAAA,MAAM,EAAE;AAHW,WAAA,CAArB;AAKD;AACF,OARM,MAQA,IACL,GAAG,KAAA,SAAH,IACA,GAAG,KAAA,QADH,IAEA,GAAG,KAAA,SAFH,IAGA,GAAG,KAAA,UAHH,IAIA,GAAG,KAAA,UALE,EAML;AACA,YAAI,KAAK,CAAC,GAAD,CAAL,IAAc,IAAd,IAAsB,OAAO,KAAA,SAAjC,EAAiD;AAC/C,gBAAM,eAAe,CAAA;AACnB,YAAA,GADmB;AAEnB,YAAA,QAAQ,EAAA,WAFW;AAGnB,YAAA,MAAM,EAAE;AAHW,WAAA,CAArB;AAKD;AACF,OAdM,MAcA;AACL;AACA;AACA,cAAM,CAAC,GAAU,GAAjB;AACD;AACF,KAtCD,EArDyC,CA6FzC;AACA;;AACA,UAAM,SAAS,GA5MD,MAAO,CAAA,OAAP,CA4MU,MA5MV,CA4MiB,KA5MjB,CA4Md;;AACA,QAAI,KAAK,CAAC,QAAN,IAAc,CAAK,SAAS,CAAC,OAAjC,EAA0C;AACxC,MAAA,SAAS,CAAC,OAAV,GAAoB,IAApB;AACA,MAAA,OAAO,CAAC,IAAR,CAAY,sKAAZ;AAGD;AACF;;AACD,QAAM,CAAC,GAAG,KAAK,CAAC,QAAN,KAAmB,KAA7B;AACA,QAAM,MAAM,GAAA,CAAA,GA1MY,QA0MZ,EA1MsB,SA0MtB,EAAZ;;AAEA,QAAK;AAAG,IAAA,IAAH;AAAS,IAAA;AAAT,MAvNW,MAAO,CAAA,OAAP,CAuNW,OAvNX,CAuNkB,MAAO;AACvC,UAAK,CAAE,YAAF,EAAgB,UAAhB,IAA0B,CAAA,GA9M5B,OA8M4B,EA9MC,WA8MD,CAAgB,MAAhB,EAAwB,KAAK,CAAC,IAA9B,EAAoC,IAApC,CAA/B;;AAEE,MAAA,IAAI,EAAE,Y;AACN,MAAA,EAAE,EAAE,KAAK,CAAC,EAAN,GAAQ,CAAA,GAjNX,OAiNW,EAjNkB,WAiNlB,CAAe,MAAf,EAAuB,KAAK,CAAC,EAA7B,CAAR,GAA2C,UAAU,IAAI;;AAEhE,GA7Ne,EA6Nf,CAAG,MAAH,EAAW,KAAK,CAAC,IAAjB,EAAuB,KAAK,CAAC,EAA7B,CA7Ne,CAuNhB;;AAQA,MAAG;AAAG,IAAA,QAAH;AAAa,IAAA,OAAb;AAAsB,IAAA,OAAtB;AAA+B,IAAA,MAA/B;AAAuC,IAAA;AAAvC,MAAkD,KAArD,CAnHuD,CAqHvD;;AACA,MAAE,OAAS,QAAT,KAAiB,QAAnB,EAAkC;AAChC,IAAA,QAAQ,GAAA,aAnOM,MAAO,CAAA,OAAP,CAAO,aAAP,CAAO,GAAP,EAmOD,IAnOC,EAmOC,QAnOD,CAmOd;AACD,GAxHsD,CA0HvD;;;AACA,MAAI,KAAJ;;AACA,YAA4C;QACtC;AACF,MAAA,KAAK,GA1OO,MAAO,CAAA,OAAP,CA0OE,QA1OF,CA0OW,IA1OX,CA0OgB,QA1OhB,CA0OZ;AACD,K,CAAA,OAAQ,GAAR,EAAa;AACZ,YAAM,IAAI,KAAJ,CACH,8DAA6D,KAAK,CAAC,IAAK,4FAD5D,IACsJ,QACnI,mEADmI,GAE1F,EAH5D,CAAT,CAAN;AAMD;AACF,GAXD,MAWO;AACL,IAAA,KAAK,GApPS,MAAO,CAAA,OAAP,CAoPA,QApPA,CAoPS,IApPT,CAoPc,QApPd,CAoPd;AACD;;AACD,QAAM,QAAQ,GAAQ,KAAK,IAAA,OAAW,KAAX,KAAgB,QAArB,IAAsC,KAAK,CAAC,GAAlE;AAEA,QAAK,CAAE,kBAAF,EAAsB,SAAtB,IAA+B,CAAA,GA5ON,gBA4OM,EA5Oc,eA4Od,CA5Oc;AA6OhD,IAAA,UAAU,EAAA;AA7OsC,GA4Od,CAApC;;AAGA,QAAM,MAAM,GA3PI,MAAO,CAAA,OAAP,CA2PK,WA3PL,CA4Pb,EAD6B,IACb;AACf,IAAA,kBAAkB,CAAC,EAAD,CAAlB;;AACA,QAAI,QAAJ,EAAc;AACZ,UAAE,OAAS,QAAT,KAAiB,UAAnB,EAAoC,QAAQ,CAAC,EAAD,CAAR,CAApC,KACK,IAAE,OAAS,QAAT,KAAiB,QAAnB,EAAkC;AACrC,QAAA,QAAQ,CAAC,OAAT,GAAmB,EAAnB;AACD;AACF;AACF,GApQa,EAoQb,CACA,QADA,EACU,kBADV,CApQa,CA2PhB;;AA3PgB,EAAA,MAAO,CAAA,OAAP,CAuQV,SAvQU,CAuQD,MAAO;AACpB,UAAM,cAAc,GAAG,SAAS,IAAI,CAAb,IAAc,CAAA,GA9PlC,OA8PkC,EA9PL,UA8PK,CAAe,IAAf,CAArC;AACA,UAAM,SAAS,GAAA,OACN,MADM,KACA,WADA,GACmB,MADnB,GAC4B,MAAM,IAAI,MAAM,CAAC,MAD5D;AAEA,UAAM,YAAY,GAChB,UAAU,CAAC,IAAI,GAAA,GAAJ,GAAa,EAAb,IAAmB,SAAS,GAAA,MAAS,SAAT,GAAkB,EAA9C,CAAD,CADZ;;AAEA,QAAI,cAAc,IAAA,CAAK,YAAvB,EAAqC;AACnC,MAAA,QAAQ,CAAC,MAAD,EAAS,IAAT,EAAe,EAAf,EAAiB;AACvB,QAAA,MAAM,EAAE;AADe,OAAjB,CAAR;AAGD;AACF,GAlRe,EAkRf,CAAG,EAAH,EAAO,IAAP,EAAa,SAAb,EAAwB,MAAxB,EAAgC,CAAhC,EAAmC,MAAnC,CAlRe;;AAoRhB,QAAM,UAAU,GAAA;AAMd,IAAA,GAAG,EAAE,MANS;AAOd,IAAA,OAAO,EAAG,CAAH,IAA2B;AAChC,UAAI,KAAK,CAAC,KAAN,IAAW,OAAW,KAAK,CAAC,KAAN,CAAY,OAAvB,KAA8B,UAA7C,EAA8D;AAC5D,QAAA,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAoB,CAApB;AACD;;AACD,UAAE,CAAG,CAAC,CAAC,gBAAP,EAAyB;AACvB,QAAA,WAAW,CAAC,CAAD,EAAI,MAAJ,EAAY,IAAZ,EAAkB,EAAlB,EAAsB,OAAtB,EAA+B,OAA/B,EAAwC,MAAxC,EAAgD,MAAhD,CAAX;AACD;AACF;AAda,GAAhB;;AAiBA,EAAA,UAAU,CAAC,YAAX,GAA2B,CAAJ,IAA4B;AACjD,QAAE,CAAA,CAAA,GA5RC,OA4RD,EA5R8B,UA4R9B,CAAc,IAAd,CAAF,EAAoB;;AACpB,QAAI,KAAK,CAAC,KAAN,IAAW,OAAW,KAAK,CAAC,KAAN,CAAY,YAAvB,KAAmC,UAAlD,EAAmE;AACjE,MAAA,KAAK,CAAC,KAAN,CAAY,YAAZ,CAAyB,CAAzB;AACD;;AACD,IAAA,QAAQ,CAAC,MAAD,EAAS,IAAT,EAAe,EAAf,EAAiB;AAAI,MAAA,QAAQ,EAAE;AAAd,KAAjB,CAAR;AACD,GAND,CAzLuD,CAiMvD;AACA;;;AACA,MAAI,KAAK,CAAC,QAAN,IAAmB,KAAK,CAAC,IAAN,KAAU,GAAV,IAAkB,EAAA,UAAgB,KAAK,CAAC,KAAtB,CAAzC,EAAwE;AACtE,UAAM,SAAS,GAAA,OACN,MADM,KACA,WADA,GACmB,MADnB,GAC4B,MAAM,IAAI,MAAM,CAAC,MAD5D,CADsE,CAItE;AACA;;AACA,UAAM,YAAY,GAChB,MAAM,IACN,MAAM,CAAC,cADP,IACqB,CAAA,GA7SpB,OA6SoB,EA7SS,eA6ST,CAEnB,EAFmB,EAGnB,SAHmB,EAInB,MAAM,IAAI,MAAM,CAAC,OAJE,EAKnB,MAAM,IAAI,MAAM,CAAC,aALE,CAFvB;AAUA,IAAA,UAAU,CAAC,IAAX,GACE,YAAY,IAAA,CAAA,GAtTX,OAsTW,EAtTkB,WAsTlB,CAtTkB,CAAA,GAA7B,OAA6B,EAAA,SAAA,CAuTR,EAvTQ,EAuTJ,SAvTI,EAuTO,MAAM,IAAI,MAAM,CAAC,aAvTxB,CAsTlB,CADd;AAGD;;sBAlUe,MAAO,CAAA,OAAP,CAoUH,YApUG,CAoUU,KApUV,EAoUiB,UApUjB,C;AAqUjB;;eAEc,I","sourcesContent":["import React from 'react'\nimport { UrlObject } from 'url'\nimport {\n  addBasePath,\n  addLocale,\n  getDomainLocale,\n  isLocalURL,\n  NextRouter,\n  PrefetchOptions,\n  resolveHref,\n} from '../shared/lib/router/router'\nimport { useRouter } from './router'\nimport { useIntersection } from './use-intersection'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<LinkProps>\n\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined' || !router) return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  const curLocale =\n    options && typeof options.locale !== 'undefined'\n      ? options.locale\n      : router && router.locale\n\n  // Join on an invalid URI character\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null && as.indexOf('#') >= 0) {\n    scroll = false\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll,\n  })\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n  const router = useRouter()\n\n  const { href, as } = React.useMemo(() => {\n    const [resolvedHref, resolvedAs] = resolveHref(router, props.href, true)\n    return {\n      href: resolvedHref,\n      as: props.as ? resolveHref(router, props.as) : resolvedAs || resolvedHref,\n    }\n  }, [router, props.href, props.as])\n\n  let { children, replace, shallow, scroll, locale } = props\n\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (process.env.NODE_ENV === 'development') {\n    try {\n      child = React.Children.only(children)\n    } catch (err) {\n      throw new Error(\n        `Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n          (typeof window !== 'undefined'\n            ? \" \\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n  } else {\n    child = React.Children.only(children)\n  }\n  const childRef: any = child && typeof child === 'object' && child.ref\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n  })\n  const setRef = React.useCallback(\n    (el: Element) => {\n      setIntersectionRef(el)\n      if (childRef) {\n        if (typeof childRef === 'function') childRef(el)\n        else if (typeof childRef === 'object') {\n          childRef.current = el\n        }\n      }\n    },\n    [childRef, setIntersectionRef]\n  )\n  React.useEffect(() => {\n    const shouldPrefetch = isVisible && p && isLocalURL(href)\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n    const isPrefetched =\n      prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')]\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale,\n      })\n    }\n  }, [as, href, isVisible, locale, p, router])\n\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: setRef,\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      }\n    },\n  }\n\n  childProps.onMouseEnter = (e: React.MouseEvent) => {\n    if (!isLocalURL(href)) return\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e)\n    }\n    prefetch(router, href, as, { priority: true })\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain =\n      router &&\n      router.isLocaleDomain &&\n      getDomainLocale(\n        as,\n        curLocale,\n        router && router.locales,\n        router && router.domainLocales\n      )\n\n    childProps.href =\n      localeDomain ||\n      addBasePath(addLocale(as, curLocale, router && router.defaultLocale))\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nexport default Link\n"]},"metadata":{},"sourceType":"script"}