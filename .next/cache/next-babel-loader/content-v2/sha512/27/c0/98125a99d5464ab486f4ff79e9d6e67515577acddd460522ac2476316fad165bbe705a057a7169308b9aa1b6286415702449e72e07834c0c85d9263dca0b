{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/gazifuad/Documents/GitHub/Rice-Datathon-Website/node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar isServer = false;\n\nvar _class = /*#__PURE__*/function (_react$Component) {\n  _inherits(_class, _react$Component);\n\n  var _super = _createSuper(_class);\n\n  function _class(props) {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this, props);\n\n    _this.emitChange = function () {\n      if (_this._hasHeadManager) {\n        _this.props.headManager.updateHead(_this.props.reduceComponentsToState(_toConsumableArray(_this.props.headManager.mountedInstances), _this.props));\n      }\n    };\n\n    _this._hasHeadManager = _this.props.headManager && _this.props.headManager.mountedInstances;\n\n    if (isServer && _this._hasHeadManager) {\n      _this.props.headManager.mountedInstances.add(_assertThisInitialized(_this));\n\n      _this.emitChange();\n    }\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances.add(this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.emitChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._hasHeadManager) {\n        this.props.headManager.mountedInstances[\"delete\"](this);\n      }\n\n      this.emitChange();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return _class;\n}(_react.Component);\n\nexports[\"default\"] = _class;","map":{"version":3,"sources":["../../../shared/lib/side-effect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAiC,IAAA,MAAO,GAAA,OAAA,CAAA,OAAA,CAAP;;AAEjC,IAAM,QAAQ,QAAd;;;;;;;kBA4Bc,K,EAAY;AAAA;;AAAA;;AACtB,8BAAM,KAAN;;UAZF,U,GAAU,YAAe;AACvB,UAAE,MAAO,eAAT,EAA0B;cACnB,K,CAAM,W,CAAY,U,CAAU,MAC1B,KAD0B,CACpB,uBADoB,oB,MAEpB,K,CAAM,W,CAAY,gBAFE,G,MAGxB,KAHwB,C;AAMlC;AACF,K;;UAIM,e,GAAe,MACb,KADa,CACP,WADO,IACI,MAAS,KAAT,CAAe,WAAf,CAA2B,gB;;AAEnD,QAAI,QAAQ,IAAA,MAAS,eAArB,EAAsC;YAC/B,K,CAAM,W,CAAY,gB,CAAiB,G;;YACnC,U;AACN;;AARqB;AASvB;;;;WACD,6BAAoB;AAClB,UAAE,KAAO,eAAT,EAA0B;aACnB,K,CAAM,W,CAAY,gB,CAAiB,G,CAAG,I;AAC5C;;WACI,U;AACN;;;WACD,8BAAqB;WACd,U;AACN;;;WACD,gCAAuB;AACrB,UAAE,KAAO,eAAT,EAA0B;aACnB,K,CAAM,W,CAAY,gB,WAAuB,I;AAC/C;;WACI,U;AACN;;;WAED,kBAAS;aACA,I;AACR;;;;EA1D8B,MAAO,CAAA,S","sourcesContent":["import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}